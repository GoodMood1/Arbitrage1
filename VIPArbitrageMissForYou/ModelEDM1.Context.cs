//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VIPArbitrageMissForYou
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ArbitraEntities1 : DbContext
    {
        public ArbitraEntities1()
            : base("name=ArbitraEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdminoWorld> AdminoWorld { get; set; }
        public virtual DbSet<ArbitrageClients> ArbitrageClients { get; set; }
        public virtual DbSet<History> History { get; set; }
        public virtual DbSet<P2PHelper> P2PHelper { get; set; }
        public virtual DbSet<SpotFinancialHelper> SpotFinancialHelper { get; set; }
    
        public virtual int stp_AddClientAPI(Nullable<int> i, string login_, string pass, string aPI, string aPISecret)
        {
            var iParameter = i.HasValue ?
                new ObjectParameter("i", i) :
                new ObjectParameter("i", typeof(int));
    
            var login_Parameter = login_ != null ?
                new ObjectParameter("Login_", login_) :
                new ObjectParameter("Login_", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            var aPIParameter = aPI != null ?
                new ObjectParameter("API", aPI) :
                new ObjectParameter("API", typeof(string));
    
            var aPISecretParameter = aPISecret != null ?
                new ObjectParameter("APISecret", aPISecret) :
                new ObjectParameter("APISecret", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_AddClientAPI", iParameter, login_Parameter, passParameter, aPIParameter, aPISecretParameter);
        }
    
        public virtual int stp_AddClients(string login_, string password_)
        {
            var login_Parameter = login_ != null ?
                new ObjectParameter("Login_", login_) :
                new ObjectParameter("Login_", typeof(string));
    
            var password_Parameter = password_ != null ?
                new ObjectParameter("Password_", password_) :
                new ObjectParameter("Password_", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_AddClients", login_Parameter, password_Parameter);
        }
    
        public virtual int stp_AddHistory(string login_, string password_, string exch_, Nullable<decimal> sold_, Nullable<decimal> bought_, Nullable<System.DateTime> time_)
        {
            var login_Parameter = login_ != null ?
                new ObjectParameter("Login_", login_) :
                new ObjectParameter("Login_", typeof(string));
    
            var password_Parameter = password_ != null ?
                new ObjectParameter("Password_", password_) :
                new ObjectParameter("Password_", typeof(string));
    
            var exch_Parameter = exch_ != null ?
                new ObjectParameter("exch_", exch_) :
                new ObjectParameter("exch_", typeof(string));
    
            var sold_Parameter = sold_.HasValue ?
                new ObjectParameter("sold_", sold_) :
                new ObjectParameter("sold_", typeof(decimal));
    
            var bought_Parameter = bought_.HasValue ?
                new ObjectParameter("bought_", bought_) :
                new ObjectParameter("bought_", typeof(decimal));
    
            var time_Parameter = time_.HasValue ?
                new ObjectParameter("time_", time_) :
                new ObjectParameter("time_", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_AddHistory", login_Parameter, password_Parameter, exch_Parameter, sold_Parameter, bought_Parameter, time_Parameter);
        }
    
        public virtual int stp_AddPhrase(Nullable<int> i, string login_, string pass, string passphrase)
        {
            var iParameter = i.HasValue ?
                new ObjectParameter("i", i) :
                new ObjectParameter("i", typeof(int));
    
            var login_Parameter = login_ != null ?
                new ObjectParameter("Login_", login_) :
                new ObjectParameter("Login_", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            var passphraseParameter = passphrase != null ?
                new ObjectParameter("Passphrase", passphrase) :
                new ObjectParameter("Passphrase", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_AddPhrase", iParameter, login_Parameter, passParameter, passphraseParameter);
        }
    
        public virtual ObjectResult<stp_AdminoInfo_Result> stp_AdminoInfo(string login_)
        {
            var login_Parameter = login_ != null ?
                new ObjectParameter("Login_", login_) :
                new ObjectParameter("Login_", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_AdminoInfo_Result>("stp_AdminoInfo", login_Parameter);
        }
    
        public virtual int stp_ClearHistory(string login_, string password_)
        {
            var login_Parameter = login_ != null ?
                new ObjectParameter("Login_", login_) :
                new ObjectParameter("Login_", typeof(string));
    
            var password_Parameter = password_ != null ?
                new ObjectParameter("Password_", password_) :
                new ObjectParameter("Password_", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_ClearHistory", login_Parameter, password_Parameter);
        }
    
        public virtual ObjectResult<stp_ClientsInfo_Result> stp_ClientsInfo(string login_, string password_)
        {
            var login_Parameter = login_ != null ?
                new ObjectParameter("Login_", login_) :
                new ObjectParameter("Login_", typeof(string));
    
            var password_Parameter = password_ != null ?
                new ObjectParameter("Password_", password_) :
                new ObjectParameter("Password_", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_ClientsInfo_Result>("stp_ClientsInfo", login_Parameter, password_Parameter);
        }
    
        public virtual ObjectResult<string> stp_SendMail(string login_)
        {
            var login_Parameter = login_ != null ?
                new ObjectParameter("Login_", login_) :
                new ObjectParameter("Login_", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("stp_SendMail", login_Parameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> stp_ShowHistorywithValidation(string login_, string password_, Nullable<int> l)
        {
            var login_Parameter = login_ != null ?
                new ObjectParameter("Login_", login_) :
                new ObjectParameter("Login_", typeof(string));
    
            var password_Parameter = password_ != null ?
                new ObjectParameter("Password_", password_) :
                new ObjectParameter("Password_", typeof(string));
    
            var lParameter = l.HasValue ?
                new ObjectParameter("l", l) :
                new ObjectParameter("l", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("stp_ShowHistorywithValidation", login_Parameter, password_Parameter, lParameter);
        }
    
        public virtual ObjectResult<string> stp_ShowHistory2(string login_, string password_)
        {
            var login_Parameter = login_ != null ?
                new ObjectParameter("Login_", login_) :
                new ObjectParameter("Login_", typeof(string));
    
            var password_Parameter = password_ != null ?
                new ObjectParameter("Password_", password_) :
                new ObjectParameter("Password_", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("stp_ShowHistory2", login_Parameter, password_Parameter);
        }
    }
}
